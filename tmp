From a113f2ce6c34757a2e31bcb8b486ae586473ad51 Mon Sep 17 00:00:00 2001
From: zmy <zmy@huawei.com>
Date: Fri, 15 Aug 2025 14:37:07 +0800
Subject: [PATCH] lwip add flow and bond6 switch


diff --git a/src/core/ipv6/nd6.c b/src/core/ipv6/nd6.c
index 970ce40..f204ab8 100644
--- a/src/core/ipv6/nd6.c
+++ b/src/core/ipv6/nd6.c
@@ -62,6 +62,7 @@
 #include "lwip/ip.h"
 #include "lwip/stats.h"
 #include "lwip/dns.h"
+#include "netif/ethernet.h"
 
 #include <string.h>
 
@@ -292,6 +293,38 @@ nd6_process_autoconfig_prefix(struct netif *netif,
 }
 #endif /* LWIP_IPV6_AUTOCONFIG */
 
+#if GAZELLE_ENABLE
+int is_own_mac(struct pbuf *p, struct netif *inp) {
+  if (SYS_CONFIG(flow_bifurcation) == 1 && SYS_CONFIG(bond_mode) == 6) {
+    pbuf_add_header(p, IP6_HLEN + SIZEOF_ETH_HDR);
+    struct eth_hdr *ethhdr = (struct eth_hdr *)p->payload;
+    pbuf_remove_header(p, IP6_HLEN + SIZEOF_ETH_HDR);
+    struct netif *current_netif;
+
+    LWIP_DEBUGF(IP6_DEBUG | LWIP_DBG_TRACE,
+            ("src mac:%"X8_F":%"X8_F":%"X8_F":%"X8_F":%"X8_F":%"X8_F"\n",
+            (unsigned char)ethhdr->src.addr[0],  (unsigned char)ethhdr->src.addr[1],  
+            (unsigned char)ethhdr->src.addr[2],  (unsigned char)ethhdr->src.addr[3],
+            (unsigned char)ethhdr->src.addr[4],  (unsigned char)ethhdr->src.addr[5]));
+
+    for (current_netif = inp; current_netif != NULL; current_netif = current_netif->next) {
+        if (current_netif->hwaddr_len > 0) {
+            LWIP_DEBUGF(IP6_DEBUG | LWIP_DBG_TRACE,
+                  ("current_netif mac: %02X:%02X:%02X:%02X:%02X:%02X\n",
+                   current_netif->hwaddr[0], current_netif->hwaddr[1],
+                   current_netif->hwaddr[2], current_netif->hwaddr[3],
+                   current_netif->hwaddr[4], current_netif->hwaddr[5]));
+
+            if (eth_addr_eq((struct eth_addr*)(&current_netif->hwaddr), &ethhdr->src)){
+                  LWIP_DEBUGF(IP6_DEBUG | LWIP_DBG_TRACE,("src mac is equal netif mac, message is from myself\n"));
+                  return 1;
+            }
+        }
+    }
+  } 
+  return 0;
+}
+#endif /* GAZELLE_ENABLE */
 /**
  * Process an incoming neighbor discovery message
  *
@@ -349,6 +382,11 @@ nd6_input(struct pbuf *p, struct netif *inp)
        * part of DAD mechanism? */
 
 #if LWIP_IPV6_DUP_DETECT_ATTEMPTS
+#if GAZELLE_ENABLE
+    if (!is_own_mac(p, inp)) {
+#else
+    if(1) {
+#endif /* GAZELLE_ENABLE */
       /* If the target address matches this netif, it is a DAD response. */
       for (i = 0; i < LWIP_IPV6_NUM_ADDRESSES; i++) {
         if (!ip6_addr_isinvalid(netif_ip6_addr_state(inp, i)) &&
@@ -361,6 +399,7 @@ nd6_input(struct pbuf *p, struct netif *inp)
           return;
         }
       }
+    }
 #endif /* LWIP_IPV6_DUP_DETECT_ATTEMPTS */
 
       /* Check that link-layer address option also fits in packet. */
diff --git a/src/include/arch/sys_arch.h b/src/include/arch/sys_arch.h
index 98d9ddf..75982e5 100644
--- a/src/include/arch/sys_arch.h
+++ b/src/include/arch/sys_arch.h
@@ -70,6 +70,8 @@ void sys_mempool_var_init(struct memp_desc *memp, char *desc, u16_t size, u16_t
 
 struct sys_config {
     bool rtc_mode;
+    bool flow_bifurcation;
+    int8_t bond_mode;
 };
 void sys_config_init(const struct sys_config *conf);
 extern const struct sys_config * const g_sys_config;
diff --git a/src/include/lwip/nd6.h b/src/include/lwip/nd6.h
index c30e624..7c4023f 100644
--- a/src/include/lwip/nd6.h
+++ b/src/include/lwip/nd6.h
@@ -50,6 +50,7 @@
 
 #include "lwip/ip6_addr.h"
 #include "lwip/err.h"
+#include "lwip/sys.h"
 
 #ifdef __cplusplus
 extern "C" {
-- 
2.33.0

